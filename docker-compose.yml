services:
  backend:
    container_name: bottrap-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:${BACKEND_PORT}"
    env_file:
      - .env
    depends_on:
      - mysql
    restart: unless-stopped
    volumes:
      - .env:/app/.env:ro
    
  mysql:
    container_name: bottrap-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro # :ro - 읽기 전용으로 마운트 -> 안정성 확보
      - /var/log:/var/log # 시스템 로그 (Promtail 기본값으로 종종 사용됨)
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  log-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: log-service
    ports:
      - "8080:8080"
    restart: always
    logging:
      driver: "json-file"
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - log-service

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  grafana-storage:
  mysql_data: