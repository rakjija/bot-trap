services:
  frontend:
    container_name: goboard-frontend
    build:
      context: ./frontend
    ports:
      - '3000:80'
    depends_on:
      - backend

  backend:
    container_name: goboard-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8080:${BACKEND_PORT}'
    env_file:
      - .env
    depends_on:
      - mysql
    restart: unless-stopped
    volumes:
      - .env:/app/.env:ro

  mysql:
    container_name: goboard-mysql
    image: mysql:8.0
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  observer:
    container_name: goboard-observer
    build:
      context: ./observer
      dockerfile: Dockerfile
    volumes:
      - ./observer/logs:/app/logs
    ports:
      - '9000:9000'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: goboard-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - '9200:9200'

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    container_name: goboard-logstash
    volumes:
      - ./observer/logstash/pipeline.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./observer/logs:/usr/share/logstash/logs
    ports:
      - '5044:5044'
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: goboard-kibana
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  mysql_data:
